{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shivansh/Desktop/React-Practice/musicx-match/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  _s();\n\n  const [available, setAvailable] = useState(0);\n  const [song, setsong] = useState(\"\");\n  const [artist, setartist] = useState(\"\");\n  const [lyrics, setlyrics] = useState(\"\");\n\n  const handleSong = e => {\n    setsong(e.target.value);\n  };\n\n  const handleArtist = e => {\n    setartist(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const new_song = song.split(\" \");\n    var final_song = \"\";\n\n    for (var i = 0; i < new_song.length - 1; ++i) {\n      final_song += new_song[i] + \"%20\";\n    }\n\n    final_song += new_song[new_song.length - 1];\n    const url = `https://api.musixmatch.com/ws/1.1/matcher.lyrics.get?q_track=${final_song}&q_artist=${artist}&apikey=1e1f22ab46674c90529e1a35be559d02`;\n    const req = await fetch(url);\n    req.then(res => res.json()).then(data => {\n      setlyrics(data.message.body.lyrics.lyrics_body);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"songName\",\n        placeholder: \"song name\",\n        onChange: handleSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"artistName\",\n        placeholder: \"artist name\",\n        onChange: handleArtist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Get lyrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JblnKK9Jt656yCjjyrQLF0eUdA4=\");\n\n_c = App;\nexport default App; // 1e1f22ab46674c90529e1a35be559d02\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shivansh/Desktop/React-Practice/musicx-match/src/App.js"],"names":["React","useState","axios","App","available","setAvailable","song","setsong","artist","setartist","lyrics","setlyrics","handleSong","e","target","value","handleArtist","handleSubmit","preventDefault","new_song","split","final_song","i","length","url","req","fetch","then","res","json","data","message","body","lyrics_body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,UAAU,GAAIC,CAAD,IAAO;AACxBN,IAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,QAAQ,GAAGb,IAAI,CAACc,KAAL,CAAW,GAAX,CAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAAT,GAAkB,CAAtC,EAAyC,EAAED,CAA3C,EAA8C;AAC5CD,MAAAA,UAAU,IAAIF,QAAQ,CAACG,CAAD,CAAR,GAAc,KAA5B;AACD;;AAEDD,IAAAA,UAAU,IAAIF,QAAQ,CAACA,QAAQ,CAACI,MAAT,GAAkB,CAAnB,CAAtB;AACA,UAAMC,GAAG,GAAI,gEAA+DH,UAAW,aAAYb,MAAO,0CAA1G;AACA,UAAMiB,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACAC,IAAAA,GAAG,CACAE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdnB,MAAAA,SAAS,CAACmB,IAAI,CAACC,OAAL,CAAaC,IAAb,CAAkBtB,MAAlB,CAAyBuB,WAA1B,CAAT;AACD,KAJH;AAKD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEhB,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,QAAQ,EAAEL;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,WAAW,EAAC,aAHd;AAIE,QAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GArDQb,G;;KAAAA,G;AAuDT,eAAeA,GAAf,C,CAEA","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [available, setAvailable] = useState(0);\n  const [song, setsong] = useState(\"\");\n  const [artist, setartist] = useState(\"\");\n  const [lyrics, setlyrics] = useState(\"\");\n\n  const handleSong = (e) => {\n    setsong(e.target.value);\n  };\n\n  const handleArtist = (e) => {\n    setartist(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const new_song = song.split(\" \");\n    var final_song = \"\";\n    for (var i = 0; i < new_song.length - 1; ++i) {\n      final_song += new_song[i] + \"%20\";\n    }\n\n    final_song += new_song[new_song.length - 1];\n    const url = `https://api.musixmatch.com/ws/1.1/matcher.lyrics.get?q_track=${final_song}&q_artist=${artist}&apikey=1e1f22ab46674c90529e1a35be559d02`;\n    const req = await fetch(url);\n    req\n      .then((res) => res.json())\n      .then((data) => {\n        setlyrics(data.message.body.lyrics.lyrics_body);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"songName\"\n          placeholder=\"song name\"\n          onChange={handleSong}\n        />\n        <input\n          type=\"text\"\n          name=\"artistName\"\n          placeholder=\"artist name\"\n          onChange={handleArtist}\n        />\n        <button>Get lyrics</button>\n      </form>\n\n      {/* <div className=\"app_lyrics\">{req.message.body.lyrics.lyrics_body}</div> */}\n    </div>\n  );\n}\n\nexport default App;\n\n// 1e1f22ab46674c90529e1a35be559d02\n"]},"metadata":{},"sourceType":"module"}